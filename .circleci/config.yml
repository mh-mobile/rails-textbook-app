version: 2.1

commands:
  restore_bundle:
    steps:
      - restore_cache:
          keys:
            - rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
            - rails-demo-bundle-v2-

  install_bundle:
    steps:
      - run:
          name: Install Bundle
          command: bundle check || bundle install

  save_bundle:
    steps:
      - save_cache:
          key: rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

  restore_yarn:
    steps:
      - restore_cache:
          keys:
            - rails-demo-yarn-{{ checksum "yarn.lock" }}
            - rails-demo-yarn-

  install_yarn:
    steps:
      - run:
          name: Install Yarn
          command: yarn install --cache-folder ~/.cache/yarn

  save_yarn:
    steps:
      - save_cache:
          key: rails-demo-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

jobs: 
  test: 
    docker:
      - image: circleci/ruby:2.7.1-node-browsers
        environment: 
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          BUNDLER_VERSION: 2.1.4
          PGHOST: 127.0.0.1
          PGUSER: deploy
          RAILS_ENV: test
      - image: circleci/postgres:9.5-alpine
        environment:
          POSTGRES_USER: deploy
          POSTGRES_DB: bookapp_test
          POSTGRES_PASSWORD: ""
    steps:
      - checkout
      - run:
          name: Bundler を指定
          command: bundle -v
      - restore_bundle
      - install_bundle
      - save_bundle
      - restore_yarn
      - install_yarn
      - save_yarn
      - run:
          name: Wait For DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Setup DB
          command: bundle exec rails db:schema:load --trace
      - run:
          name: Test rails
          command: |
            bundle exec rails test          
            bundle exec rails test:system

  deploy:
    docker:
      - image: circleci/ruby:2.7.1-node-browsers
    steps:
      - checkout
      - restore_bundle
      - install_bundle
      - save_bundle
      - add_ssh_keys:
          fingerprints:
            - d2:21:d1:8a:fc:86:ad:cb:1f:e3:33:1f:53:50:bb:88
      - deploy:
          name: Deploy with Capistrano
          command: bundle exec cap production deploy

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test
      - deploy:
          requires:
            - test
          filters:
              branches:
                only: master

